#+Title: Visualisation for /segemehl/ output
#+Author: Hermann Pauly
#+Date: 
#+Email: 

#+startup: beamer
#+BEAMER_THEME: PaloAlto
#+BEAMER_HEADER: \definecolor{myPrimary}{RGB}{45,217,0}
#+BEAMER_HEADER: \definecolor{mySecondary}{RGB}{0,162,87}
#+BEAMER_HEADER: \definecolor{myTertiary}{RGB}{255,67,0}
#+BEAMER_HEADER: \setbeamercolor{structure}{fg=myPrimary,bg=mySecondary}
#+BEAMER_HEADER: \setbeamercolor{palette primary}{fg=myPrimary}
#+BEAMER_HEADER: \setbeamercolor{palette secondary}{fg=mySecondary}
#+BEAMER_HEADER: \setbeamercolor{palette tertiary}{fg=myTertiary}
#+BEAMER_HEADER: \usepackage{droid}

#+REVEAL_ROOT: ./reveal.js
#+REVEAL_THEME: simple
#+REVEAL_TRANS: none
#+OPTIONS: num:nil toc:nil
#+OPTIONS: reveal_control:nil

* Introduction

- /segemehl/: alignment tool for NGS
- can map strand switching and circular events
- no software to plot output yet

** Goal

- tool to create plots from /segemehl/ mappings
- allow search for "unusual" splice events
- user-defined selection and filtering of plots

* My approach

- graph theory
- on-screen and file output
- C++, Qt4, /.eps/

** Read as graph

- test data
  - simulated chromosomes
  - manually created RNA-reads
  - re-mapped with segemehl
- real data
  - RNA sequences of human skin cells
  - already mapped by /segemehl/

** Datastructure: reassembly

- exons as nodes
- splicings as edges
- chromosomes: maps of links to nodes

** Datastructure: plotting

- chromosomes (name, length, exon pos)
- exons for plots (id, length, position)
- connection information

* Results

** Multisplit plot

[[./cb2/snapshot1.png]]
(test data, 3' -> 5')

** Profiling

#+BEGIN_EXAMPLE
index % time    self  children    called     name
                                                 <spontaneous>
[1]     97.6    0.00    3.27                 main [1]
[2]     96.9    0.00    3.24       1         Genome::read(std::string&) [2]
[3]     96.9    0.01    3.23       1         Genome::read(std::basic_ifs...
[4]     84.2    0.08    2.74  199914         Genome::parseDataLine(std::...
-----------------------------------------------
                0.00    0.00     253/200167      Genome::parseHeaderLine...
                0.05    1.66  199914/200167      Genome::parseDataLine(s...
[5]     51.1    0.05    1.66  200167         strsplit(std::string, std::...
                0.06    1.04 3579101/3579185     std::vector<std::string...
                0.00    0.24  200167/200167      std::vector<std::string...
                0.03    0.09  200167/200167      std::unique_ptr<std::ve...
                0.04    0.07 3779268/3779268     bool std::operator!=<ch...
                0.03    0.04 3579101/3579101     std::unique_ptr<std::ve...
                0.00    0.03  200167/200167      std::unique_ptr<std::ve...
                0.00    0.00  200167/200167      std::unique_ptr<std::ve...
                0.00    0.00  200167/200168      std::vector<std::string...
#+END_EXAMPLE

* Problems and outlook

[[./cb2/roadmap.png]]

** Problems

- /segemehl/ doesn't honour /.sam/ standard
- memory: graph of 40+ GiB input files
- data not ordered
- Qt4 file printing surprisingly bad

** To do / planned

- visuals
  - include strandiness information
  - shortened chromosome displays
  - more information
- function
  - more filtering
  - circular elements
  - graphical interface
  - more input formats
  - include genomic annotation

* 
*Thank you*

* Sources

* strsplit()

#+BEGIN_SRC c++
vector<string> strsplit ( string& input, string& delim, bool keepEmpty ) {
  string token, theStr(input);
  int L = delim.length();
  vector<string> result(new vector<string>());
  
  while (token != theStr) {
    auto end = theStr.find_first_of(delim);
    token = theStr.substr(0, end);
    theStr = theStr.substr(end + L);
    if (keepEmpty || token.length() > 0) {
      result.push_back(token);
    }
  }
  return result;
}
#+END_SRC

#+REVEAL_HTML: <script src="beamer-like.js"></script>
